/// Flutter icons SendbirdIcons
/// Copyright (C) 2024 by original authors @ fluttericon.com, fontello.com
/// This font was generated by FlutterIcon.com, which is derived from Fontello.
///
/// To use this font, place it in your fonts/ directory and include the
/// following in your pubspec.yaml
///
/// flutter:
///   fonts:
///    - family:  SendbirdIcons
///      fonts:
///       - asset: fonts/SendbirdIcons.ttf
///
///
///
import 'package:flutter/widgets.dart';

/// SBUIcons
class SBUIcons {
  static const _kFontFam = 'SendbirdIcons';
  static const String? _kFontPkg = null;

  static IconData add =
      const IconData(0xe800, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData archive =
      const IconData(0xe801, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData arrowLeft =
      const IconData(0xe802, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData ban =
      const IconData(0xe803, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData broadcast =
      const IconData(0xe804, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData camera =
      const IconData(0xe805, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData channels =
      const IconData(0xe806, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData chatFilled =
      const IconData(0xe807, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData chatHide =
      const IconData(0xe808, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData chatShow =
      const IconData(0xe809, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData chat =
      const IconData(0xe80a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData checkboxOff =
      const IconData(0xe80b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData checkboxOn =
      const IconData(0xe80c, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData chevronDown =
      const IconData(0xe80d, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData chevronRight =
      const IconData(0xe80e, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData close =
      const IconData(0xe80f, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData copy =
      const IconData(0xe810, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData create =
      const IconData(0xe811, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData delete =
      const IconData(0xe812, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData document =
      const IconData(0xe813, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData doneAll =
      const IconData(0xe814, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData done =
      const IconData(0xe815, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData download =
      const IconData(0xe816, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData edit =
      const IconData(0xe817, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData emoji =
      const IconData(0xe818, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData error =
      const IconData(0xe819, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData fileAudio =
      const IconData(0xe81a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData fileDocument =
      const IconData(0xe81b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData freeze =
      const IconData(0xe81c, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData gif =
      const IconData(0xe81d, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData info =
      const IconData(0xe81e, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData leave =
      const IconData(0xe81f, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData markAsUnread =
      const IconData(0xe820, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData members =
      const IconData(0xe821, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData message =
      const IconData(0xe822, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData moderations =
      const IconData(0xe823, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData more =
      const IconData(0xe824, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData mute =
      const IconData(0xe825, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData notificationsFilled =
      const IconData(0xe826, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData notificationsOffFilled =
      const IconData(0xe827, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData notifications =
      const IconData(0xe828, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData operator =
      const IconData(0xe829, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData photo =
      const IconData(0xe82a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData play =
      const IconData(0xe82b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData plus =
      const IconData(0xe82c, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData question =
      const IconData(0xe82d, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData refresh =
      const IconData(0xe82e, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData remove =
      const IconData(0xe82f, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData replyFilled =
      const IconData(0xe830, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData reply =
      const IconData(0xe831, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData search =
      const IconData(0xe832, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData send =
      const IconData(0xe833, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData settingFilled =
      const IconData(0xe834, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData spinner =
      const IconData(0xe835, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData streaming =
      const IconData(0xe836, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData supergroup =
      const IconData(0xe837, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData theme =
      const IconData(0xe838, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData thumbnailNone =
      const IconData(0xe839, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData time =
      const IconData(0xe83a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData unarchive =
      const IconData(0xe83b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static IconData user =
      const IconData(0xe83c, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Sets icons.
  static void setIcons({
    required IconData add,
    required IconData archive,
    required IconData arrowLeft,
    required IconData ban,
    required IconData broadcast,
    required IconData camera,
    required IconData channels,
    required IconData chatFilled,
    required IconData chatHide,
    required IconData chatShow,
    required IconData chat,
    required IconData checkboxOff,
    required IconData checkboxOn,
    required IconData chevronDown,
    required IconData chevronRight,
    required IconData close,
    required IconData copy,
    required IconData create,
    required IconData delete,
    required IconData document,
    required IconData doneAll,
    required IconData done,
    required IconData download,
    required IconData edit,
    required IconData emoji,
    required IconData error,
    required IconData fileAudio,
    required IconData fileDocument,
    required IconData freeze,
    required IconData gif,
    required IconData info,
    required IconData leave,
    required IconData markAsUnread,
    required IconData members,
    required IconData message,
    required IconData moderations,
    required IconData more,
    required IconData mute,
    required IconData notificationsFilled,
    required IconData notificationsOffFilled,
    required IconData notifications,
    required IconData operator,
    required IconData photo,
    required IconData play,
    required IconData plus,
    required IconData question,
    required IconData remove,
    required IconData refresh,
    required IconData replyFilled,
    required IconData reply,
    required IconData search,
    required IconData send,
    required IconData settingFilled,
    required IconData spinner,
    required IconData streaming,
    required IconData supergroup,
    required IconData theme,
    required IconData thumbnailNone,
    required IconData time,
    required IconData unarchive,
    required IconData user,
  }) {
    SBUIcons.add = add;
    SBUIcons.archive = archive;
    SBUIcons.arrowLeft = arrowLeft;
    SBUIcons.ban = ban;
    SBUIcons.broadcast = broadcast;
    SBUIcons.camera = camera;
    SBUIcons.channels = channels;
    SBUIcons.chatFilled = chatFilled;
    SBUIcons.chatHide = chatHide;
    SBUIcons.chatShow = chatShow;
    SBUIcons.chat = chat;
    SBUIcons.checkboxOff = checkboxOff;
    SBUIcons.checkboxOn = checkboxOn;
    SBUIcons.chevronDown = chevronDown;
    SBUIcons.chevronRight = chevronRight;
    SBUIcons.close = close;
    SBUIcons.copy = copy;
    SBUIcons.create = create;
    SBUIcons.delete = delete;
    SBUIcons.document = document;
    SBUIcons.doneAll = doneAll;
    SBUIcons.done = done;
    SBUIcons.download = download;
    SBUIcons.edit = edit;
    SBUIcons.emoji = emoji;
    SBUIcons.error = error;
    SBUIcons.fileAudio = fileAudio;
    SBUIcons.fileDocument = fileDocument;
    SBUIcons.freeze = freeze;
    SBUIcons.gif = gif;
    SBUIcons.info = info;
    SBUIcons.leave = leave;
    SBUIcons.markAsUnread = markAsUnread;
    SBUIcons.members = members;
    SBUIcons.message = message;
    SBUIcons.moderations = moderations;
    SBUIcons.more = more;
    SBUIcons.mute = mute;
    SBUIcons.notificationsFilled = notificationsFilled;
    SBUIcons.notificationsOffFilled = notificationsOffFilled;
    SBUIcons.notifications = notifications;
    SBUIcons.operator = operator;
    SBUIcons.photo = photo;
    SBUIcons.play = play;
    SBUIcons.plus = plus;
    SBUIcons.question = question;
    SBUIcons.remove = remove;
    SBUIcons.refresh = refresh;
    SBUIcons.replyFilled = replyFilled;
    SBUIcons.reply = reply;
    SBUIcons.search = search;
    SBUIcons.send = send;
    SBUIcons.settingFilled = settingFilled;
    SBUIcons.spinner = spinner;
    SBUIcons.streaming = streaming;
    SBUIcons.supergroup = supergroup;
    SBUIcons.theme = theme;
    SBUIcons.thumbnailNone = thumbnailNone;
    SBUIcons.time = time;
    SBUIcons.unarchive = unarchive;
    SBUIcons.user = user;
  }
}
